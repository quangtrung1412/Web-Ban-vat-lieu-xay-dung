// <auto-generated />
using CreateDb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace CreateDb.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CreateDb.Data.Entities.Category", b =>
                {
                    b.Property<string>("CategoryCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CategoryCode");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CategoryName");

                    b.HasKey("CategoryCode");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("CreateDb.Data.Entities.OrderDetail", b =>
                {
                    b.Property<string>("OrderDetailCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("OrderDetailCode");

                    b.Property<long>("NumberProduct")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("NumberProduct");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("OrderCode");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("ProductCode");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ProductName");

                    b.Property<long>("RetailPrice")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("RetailPrice");

                    b.Property<long>("Sale")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("Sale");

                    b.Property<long>("TotalPrice")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("TotalPrice");

                    b.Property<int>("Unit")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Unit");

                    b.HasKey("OrderDetailCode");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("CreateDb.Data.Entities.OrderingStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("OrderingStatus_pk");

                    b.ToTable("OrderingStatus", (string)null);
                });

            modelBuilder.Entity("CreateDb.Data.Entities.Product", b =>
                {
                    b.Property<string>("ProductCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("ProductCode");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CategoryName");

                    b.Property<decimal>("Cost")
                        .HasColumnType("NUMBER(20,3)")
                        .HasColumnName("Cost");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("Image");

                    b.Property<long>("Inventory")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("Inventory");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("ProductName");

                    b.Property<long>("RetailPrice")
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("RetailPrice");

                    b.Property<bool>("Status")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("Status");

                    b.Property<string>("TradeMarkName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("TradeMarkName");

                    b.Property<int>("Unit")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Unit");

                    b.HasKey("ProductCode");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("CreateDb.Data.Entities.TradeMark", b =>
                {
                    b.Property<string>("TradeMarkCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("TradeMarkCode");

                    b.Property<string>("TradeMarkName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("TradeMarkName");

                    b.HasKey("TradeMarkCode");

                    b.ToTable("TradeMark", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
